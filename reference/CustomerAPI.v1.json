{
  "openapi": "3.0.0",
  "info": {
    "title": "CustomersAPI",
    "version": "1.0",
    "description": "API for fetching, updating, creating and executing actions for customers."
  },
  "servers": [
    {
      "url": "https://invoiceapi-dev.horizonafs.io"
    }
  ],
  "paths": {
    "/v1/customers": {
      "get": {
        "summary": "Search customers",
        "responses": {
          "200": {
            "description": "OK response with a list of invoices for a given searchcriteria.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/listCustomerResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 - Bad Request response is given when some of the inputdata is incorrect. \nAn Error response is returned."
          },
          "401": {
            "description": "401 - Unauthorized when user is not authenticated with a valid token from Auth0."
          },
          "403": {
            "description": "403 - Forbidden is return when user does not have authorization to the Resource (scope) or the client."
          },
          "500": {
            "description": "500 - Internal Server Error is returned when unhandled errors occurs."
          }
        },
        "operationId": "searchCustomer",
        "description": "This customer search endpoint allows you to search for customers with search parameters.\nThe endpoint return a list of customers matching the search criteria. The result can be a list of 0 to many items.\nThis customers endpoint search a customer with a given search parameters. The endpoint returns a list of customers.\nSearch parameters can be:\nCustomerFullName\neMail\nSSN\nOrganization_Number\nPhoneNumber\n",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "eMail",
            "description": "Customer eMail address"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "SSN",
            "description": "Customer Social security number used for customer type \"Person\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Organization_number",
            "description": "Customer organization number used for customer type \"Company\""
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "PhoneNumber",
            "description": "Customer Phone number"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "CustomerFullName",
            "description": "The customers full name"
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "post": {
        "summary": "",
        "operationId": "post-v1-customers",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Post customers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../models/PostCustomers.v1.yaml"
              }
            }
          }
        }
      },
      "patch": {
        "summary": "",
        "operationId": "patch-v1-customers",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../models/PatchCustomers.v1.yaml"
              }
            }
          }
        }
      }
    },
    "/v1/customers/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get customer",
        "tags": [],
        "responses": {
          "200": {
            "description": "200 - OK response with customer details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCustomerResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 - Bad Request response is given when some of the inputdata is incorrect. \nAn Error response is returned."
          },
          "401": {
            "description": "401 - Unauthorized when user is not authenticated with a valid token from Auth0."
          },
          "403": {
            "description": "403 - Forbidden is return when user does not have authorization to the Resource (scope) or the client."
          },
          "404": {
            "description": "404 - Not Found is returned when invoice is not found for given invoiceNo."
          },
          "500": {
            "description": "500 - Internal Server Error is returned when unhandled errors occurs."
          }
        },
        "operationId": "getCustomer",
        "description": "Endpoint for fetching customer details."
      }
    }
  },
  "components": {
    "schemas": {
      "getCustomerResponse": {
        "title": "GetCustomersResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "eMail": {
            "type": "string",
            "format": "email"
          },
          "PhoneNumber": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "Organization_number": {
            "type": "string"
          },
          "Address": {
            "$ref": "../models/PostCustomerAddress.v1.yaml"
          }
        },
        "required": [
          "id",
          "lastname"
        ]
      },
      "listCustomerResponse": {
        "title": "GetCustomersResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "eMail": {
            "type": "string"
          },
          "PhoneNumber": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "City": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Auth0": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "",
            "refreshUrl": "",
            "scopes": {}
          }
        },
        "description": "Accessing the API is only allowed when having a valid Auth0 token."
      },
      "BorderPatrol": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "",
            "tokenUrl": "",
            "refreshUrl": "",
            "scopes": {}
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Customers"
    }
  ]
}